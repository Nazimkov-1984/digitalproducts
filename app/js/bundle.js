(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

// Search 
var link = document.querySelectorAll('.header__bar__item'),
    inp = document.querySelector('.header__input');
showMenu();

function showMenu() {
  link[1].addEventListener('click', function () {
    var styleInput = window.getComputedStyle(inp);

    if (styleInput.display === 'none') {
      inp.style.display = 'block';
    } else {
      inp.style.display = 'none';
    }

    event.preventDefault(link[1]);
  });
} // tabs   


var tabs = document.querySelectorAll('.about__tabs__item'),
    tabsContent = document.querySelectorAll('.about__cards__item'),
    tabsParent = document.querySelector('.about__tabs');

function hideTabContent() {
  tabsContent.forEach(function (item) {
    item.style.display = 'none';
  });
  tabs.forEach(function (item) {
    item.classList.remove('about__tabs__item--active');
  });
}

function showTabContent() {
  var i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  tabsContent[i].style.display = 'flex';
  tabs[i].classList.add('about__tabs__item--active');
}

hideTabContent();
showTabContent(0);
tabsParent.addEventListener('click', function (event) {
  var target = event.target;

  if (target && target.classList.contains('about__tabs__item')) {
    tabs.forEach(function (item, i) {
      if (target == item) {
        hideTabContent();
        showTabContent(i);
      }
    });
  }
}); // accordeon 

var qestions = document.querySelectorAll('.asked__accord__item__title'),
    content = document.querySelectorAll('.asked__accord__item__text');
content.forEach(function (item) {
  item.style.display = 'none';
});

var _loop = function _loop(i) {
  qestions[i].addEventListener('click', function () {
    var st = window.getComputedStyle(content[i]);

    if (st.display === 'none') {
      content[i].style.display = 'block';
    } else {
      content[i].style.display = 'none';
    }
  });
};

for (var i = 0; i < qestions.length; i++) {
  _loop(i);
} //slider testimonials


var sliders = document.querySelectorAll('.testimonials__list__item');
var prev = document.querySelector('.testimonials__arrow--left');
var next = document.querySelector('.testimonials__arrow--right');
var slideIndex = 1;
showSlide(slideIndex);

function showSlide(n) {
  if (n > sliders.length) {
    slideIndex = 1;
  }

  if (n < 1) {
    slideIndex = sliders.length;
  }

  sliders.forEach(function (item) {
    return item.style.display = 'none';
  });
  sliders[slideIndex - 1].style.display = '';
}

function plusSlides(n) {
  showSlide(slideIndex += n);
}

prev.addEventListener('click', function () {
  plusSlides(-1);
});
next.addEventListener('click', function () {
  plusSlides(1);
}); // end slider

var position = 0;
var slidesToShow = 3;
var slidesToScroll = 1;
var container = document.querySelector('.product__carusel__container'),
    track = document.querySelector('.product__carusel'),
    items = document.querySelectorAll('.product__carusel__item'),
    itemsCount = items.length,
    btnPrev = document.querySelector('.product__button__left'),
    btnNext = document.querySelector('.product__button__right'),
    itemWidth = container.clientWidth / slidesToShow,
    movePosition = slidesToScroll * itemWidth;
items.forEach(function (item) {
  item.style.minWidth = "".concat(itemWidth, "px");
});

var setPosition = function setPosition() {
  track.style.transform = "translateX(".concat(position, "px)");
};

var checkBtns = function checkBtns() {
  btnPrev.disabled = position === 0;
  btnNext.disabled = position <= -(itemsCount - slidesToShow) * itemWidth;
};

btnPrev.addEventListener('click', function () {
  var itemsLeft = Math.abs(position) / itemWidth;
  position += itemsLeft >= slidesToScroll ? movePosition : itemsLeft * itemWidth;
  setPosition();
  checkBtns();
});
btnNext.addEventListener('click', function () {
  var itemsLeft = itemsCount - (Math.abs(position) + slidesToShow * itemWidth) / itemWidth;
  position -= itemsLeft >= slidesToScroll ? movePosition : itemsLeft * itemWidth;
  setPosition();
  checkBtns();
});
checkBtns();

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
